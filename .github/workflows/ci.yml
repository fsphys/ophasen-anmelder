name: CI

on:
  push:
    branches: [ master ]
    tags: [ 'v*' ]
  pull_request:

env:
  JAVA_VERSION: 17
  JAVA_DISTRO: temurin
  DOCKER_PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64/v8

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.JAVA_DISTRO }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew :bootJar --no-daemon

      - uses: actions/upload-artifact@v2
        with:
          name: ophasen-anmelder
          path: build/libs

  docker:
    needs: build
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: rubidiumdev/ophasen-anmelder

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Docker meta
        id: docker_meta
        uses: marcelcoding/ghaction-docker-meta@v1
        with:
          tag-edge: true
          images: |
            ${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository_owner }}/ophasen-anmelder
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}

      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - uses: actions/download-artifact@v2
        with:
          name: ophasen-anmelder
          path: dist

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.github-actions
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/s390x
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            SERVICE_NAME=ophasen-anmelder
            JAVA_VERSION=${{ env.JAVA_VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
